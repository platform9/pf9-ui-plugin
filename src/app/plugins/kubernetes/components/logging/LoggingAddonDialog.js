
import React from 'react'
import { castFuzzyBool } from 'utils/misc'
import { compose, path } from 'ramda'
import { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core'
import ApiClient from 'api-client/ApiClient'
import Progress from 'core/components/progress/Progress'
import useDataLoader from 'core/hooks/useDataLoader'
import createContextLoader from 'core/helpers/createContextLoader'

export const hasLoggingEnabled = compose(castFuzzyBool, path(['tags', 'pf9-system:logging']))

const { appbert } = ApiClient.getInstance()

const logEnabledCacheKey = 'logAddonEnabled'

const logEnabledLoader = createContextLoader(logEnabledCacheKey, async cluster => {
  return hasLoggingEnabled(cluster)
})

const LoggingAddonDialog = ({ rows: [cluster], onClose }) => {
  const toggleLogging = async () => {
    try {
      const pkgs = await appbert.getPackages()
      const logPkg = pkgs.find(pkg => (
        pkg.name === 'pf9-log'
      ))

      if (!logPkg) {
        console.log('no logging package found')
        onClose()
        return
      }

      const logId = logPkg.ID
      await appbert.toggleAddon(cluster.uuid, logId, !enabled)
      onClose()
    } catch (e) {
      // TODO: Raise toaster notification
      console.log(e)
    }
  }

  const [enabled, loading] = useDataLoader(logEnabledLoader, { cluster })
  return (
    <Dialog open onClose={onClose}>
      <DialogTitle>Logging Add-On (Beta)</DialogTitle>
      <Progress loading={loading} message="Loading addon..." inline>
        <DialogContent>
          <p>
            <b>Note:</b> Logging is a Beta feature
          </p>
          <p>
            After enabling logging add on, you will be able to forward logs generated by Kubernetes components and user applications
            to log datastores such as ElasticSearch and S3.
          </p>
        </DialogContent>
        <DialogActions>
          <Button color="primary" type="submit" variant="contained" onClick={toggleLogging}>
            {enabled ? 'Disable' : 'Enable'}
          </Button>
          <Button variant="contained" onClick={onClose}>
            Cancel
          </Button>
        </DialogActions>
      </Progress>
    </Dialog>
  )
}

export default LoggingAddonDialog
