import { Theme as DefaultTheme } from '@material-ui/core'
// Generated by https://quicktype.io

export interface ITheme {
  breakpoints: Breakpoints
  direction: string
  mixins: Mixins
  overrides: Overrides
  palette: Palette
  shadows: string[]
  typography: Typography
  shape: Shape
  spacing: number
  transitions: Transitions
  zIndex: ZIndex
}

export interface Breakpoints {
  keys: string[]
  values: Values
}

export interface Values {
  xs: number
  sm: number
  md: number
  lg: number
  xl: number
}

export interface Mixins {
  toolbar: Toolbar
}

export interface Toolbar {
  minHeight: number
  '@media (min-width:0px) and (orientation: landscape)': MediaMinWidth
  '@media (min-width:600px)': MediaMinWidth
}

export interface MediaMinWidth {
  minHeight: number
}

export interface Overrides {
  MuiSvgIcon: MuiInputClass
  MuiInput: MuiInputClass
  MuiInputLabel: MuiInputLabel
  MuiOutlinedInput: MuiOutlinedInput
  MuiMenuItem: MuiMenuItem
  MuiTooltip: MuiTooltip
  MuiToolbar: MuiToolbar
  MuiButton: MuiButton
  MuiTableCell: MuiDialogActionsClass
  MuiDialogActions: MuiDialogActionsClass
  MuiListItem: MuiListItem
  MuiListItemIcon: MuiListItemIcon
  MuiListItemText: MuiListItemText
}

export interface MuiButton {
  contained: Contained
}

export interface Contained {
  boxShadow: string
}

export interface MuiDialogActionsClass {
  root: InputClass
}

export interface InputClass {
  padding: string
}

export interface MuiInputClass {
  root: MuiInputRoot
}

export interface MuiInputRoot {
  fontSize: string
}

export interface MuiInputLabel {
  root: MuiInputLabelRoot
  outlined: Outlined
  shrink: Shrink
}

export interface Outlined {
  transform: string
}

export interface MuiInputLabelRoot {
  color: string
}

export interface Shrink {
  fontSize: string
  color: string
}

export interface MuiListItem {
  dense: RootClass
}

export interface RootClass {
  paddingTop: number
  paddingBottom: number
}

export interface MuiListItemIcon {
  root: MuiListItemIconRoot
}

export interface MuiListItemIconRoot {
  minWidth: number
}

export interface MuiListItemText {
  root: RootClass
}

export interface MuiMenuItem {
  root: MuiMenuItemRoot
}

export interface MuiMenuItemRoot {
  fontSize: string
  minHeight: string
}

export interface MuiOutlinedInput {
  root: PurpleRoot
  input: InputClass
}

export interface PurpleRoot {
  fontSize: string
  minWidth: string
}

export interface MuiToolbar {
  dense: MuiToolbarDense
}

export interface MuiToolbarDense {
  height: number
}

export interface MuiTooltip {
  tooltip: Tooltip
}

export interface Tooltip {
  fontSize: number
  padding: string
}

export interface Palette {
  common: Common
  type: string
  primary: Error
  secondary: { [key: string]: string }
  error: Error
  grey: { [key: string]: string }
  contrastThreshold: number
  tonalOffset: number
  text: Text
  divider: string
  background: Background
  action: Action
  header: Header
  sidebar: Sidebar
  dashboardCard: DashboardCard
  card: Card
  wizard: Wizard
  code: Code
}

export interface Action {
  active: string
  hover: string
  hoverOpacity: number
  selected: string
  disabled: string
  disabledBackground: string
}

export interface Background {
  paper: string
  default: string
  dashboard: string
}

export interface Card {
  background: string
  status: string
}

export interface Code {
  background: string
  text: string
}

export interface Common {
  black: string
  white: string
}

export interface DashboardCard {
  background: string
  primary: string
  text: string
  icon: string
  button: string
  divider: string
}

export interface Error {
  light: string
  main: string
  dark: string
  contrastText: string
}

export interface Header {
  background: string
}

export interface Sidebar {
  background: string
  text: string
  activeText: string
  hoverText: string
}

export interface Text {
  primary: Primary
  secondary: string
  disabled: string
  hint: string
}

export enum Primary {
  RGBA000087 = 'rgba(0, 0, 0, 0.87)',
  The222 = '#222',
}

export interface Wizard {
  dark: string
  light: string
  medium: string
}

export interface Shape {
  borderRadius: number
}

export interface Transitions {
  easing: Easing
  duration: Duration
}

export interface Duration {
  shortest: number
  shorter: number
  short: number
  standard: number
  complex: number
  enteringScreen: number
  leavingScreen: number
}

export interface Easing {
  easeInOut: string
  easeOut: string
  easeIn: string
  sharp: string
}

export interface Typography {
  fontFamily: FontFamily
  fontSize: number
  fontWeightLight: number
  fontWeightRegular: number
  fontWeightMedium: number
  display4: Display1
  display3: Display1
  display2: Display1
  display1: Display1
  headline: Display1
  title: Display1
  subheading: Display1
  body2: Body1
  body1: Body1
  caption: Body1
  button: Body1
  h1: Body1
  h2: Body1
  h3: Body1
  h4: Body1
  h5: Body1
  h6: Body1
  subtitle1: Body1
  subtitle2: Body1
  body1Next: Body1
  body2Next: Body1
  buttonNext: Body1
  captionNext: Body1
  overline: Body1
}

export interface Body1 {
  color: Primary
  fontFamily: FontFamily
  fontWeight: number
  fontSize: string
  lineHeight: number
  letterSpacing: string
  textTransform?: string
}

export enum FontFamily {
  RobotoHelveticaArialSansSerif = '"Roboto", "Helvetica", "Arial", sans-serif',
}

export interface Display1 {
  fontSize: string
  fontWeight: number
  fontFamily: FontFamily
  lineHeight: string
  color: string
  marginLeft?: string
  letterSpacing?: string
}

export interface ZIndex {
  mobileStepper: number
  appBar: number
  drawer: number
  modal: number
  snackbar: number
  tooltip: number
}

type Theme = ITheme & DefaultTheme
export default Theme
