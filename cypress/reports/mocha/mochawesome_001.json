{
  "stats": {
    "suites": 2,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2021-06-15T16:15:35.063Z",
    "end": "2021-06-15T16:15:35.791Z",
    "duration": 728,
    "testsRegistered": 23,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 22,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "dcdb392a-b5d8-4f11-9083-7d1562cdcb30",
      "title": "",
      "fullFile": "cypress/integration/clusters.spec.js",
      "file": "cypress/integration/clusters.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0df970f1-1b99-4919-af6a-d53e39975cde",
          "title": "clusters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "195db997-ceb2-4207-bd68-4dfc0d35e772",
              "title": "list clusters",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "lists clusters",
                  "fullTitle": "clusters list clusters lists clusters",
                  "timedOut": null,
                  "duration": 603,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": "{\n  \"title\": \"Failed screenshot\",\n  \"value\": \"screenshots\\\\clusters.spec.js\\\\clusters -- lists clusters -- before each hook (failed).png\"\n}",
                  "code": "cy.visit('/ui/kubernetes/infrastructure');\ncy.contains('fakeCluster1');",
                  "err": {
                    "message": "TypeError: Cannot read property 'username' of undefined\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `clusters`",
                    "estack": "TypeError: Cannot read property 'username' of undefined\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `clusters`\n    at Context.eval (https://pmkft-1620747884-26914.platform9.io/__cypress/tests?p=cypress\\support\\index.ts:229:40)",
                    "diff": null
                  },
                  "uuid": "82e85bf5-3443-42c9-aea3-dd148e4b9b16",
                  "parentUUID": "195db997-ceb2-4207-bd68-4dfc0d35e772",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "82e85bf5-3443-42c9-aea3-dd148e4b9b16"
              ],
              "pending": [],
              "skipped": [],
              "duration": 603,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "8ff896a7-ef1d-4841-924c-5b852fe8c3e9",
              "title": "cluster details",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "allows navigation to the cluster details",
                  "fullTitle": "clusters cluster details allows navigation to the cluster details",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.contains('fakeCluster1').click();\ncy.contains('someCloudProvider');",
                  "err": {},
                  "uuid": "59f0ec95-72db-4b84-994c-1dcb6b3fbcab",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "shows nodes on cluster details",
                  "fullTitle": "clusters cluster details shows nodes on cluster details",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.contains('Nodes & Health Info').click();\ncy.contains('Master Nodes');",
                  "err": {},
                  "uuid": "0ac31dea-3b58-41e9-bcf2-65376bade772",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "59f0ec95-72db-4b84-994c-1dcb6b3fbcab",
                "0ac31dea-3b58-41e9-bcf2-65376bade772"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ee8c8f56-848a-488c-9277-e2814cc6c459",
              "title": "create cluster",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "shows the cluster create form",
                  "fullTitle": "clusters create cluster shows the cluster create form",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit('/ui/kubernetes/infrastructure');\ncy.contains('+ Add Cluster').click();\ncy.contains('Select one of the supported Cloud Provider Types:');\ncy.contains('Bare OS').click();\ncy.contains('Add Bare OS Cluster');",
                  "err": {},
                  "uuid": "a499409e-ac8c-47a4-9422-cfd0ad2b9148",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "a499409e-ac8c-47a4-9422-cfd0ad2b9148"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "387db9bc-c08d-4a11-ba9d-c1085b1ce5f2",
              "title": "cluster actions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "3f491f9d-6dca-4fb2-8e86-567bb324dbc3",
                  "title": "scale workers",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "shows the page for adding nodes to the cluster",
                      "fullTitle": "clusters cluster actions scale workers shows the page for adding nodes to the cluster",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.visit('/ui/kubernetes/infrastructure');\ncy.row('fakeCluster1').click();\ncy.contains('div', 'Scale workers').click();\ncy.contains('Add').click();\ncy.contains('button', 'Add workers');",
                      "err": {},
                      "uuid": "8b018961-9f4a-41cb-bc26-1762914522f9",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "selects \"fakeNode3\" on the node and submits",
                      "fullTitle": "clusters cluster actions scale workers selects \"fakeNode3\" on the node and submits",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.contains('tr', 'fakeNode3').click();\ncy.contains('button', 'Add workers').click();\ncy.contains('Successfully updated Cluster');",
                      "err": {},
                      "uuid": "f7a2fe8d-c6b0-498e-a940-923889aeeb52",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "should not allow the node to be added to another cluster",
                      "fullTitle": "clusters cluster actions scale workers should not allow the node to be added to another cluster",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.visit('/ui/kubernetes/infrastructure');\ncy.row('fakeCluster2').click();\ncy.contains('div', 'Scale workers').click();\ncy.contains('Add').click();",
                      "err": {},
                      "uuid": "d04199cb-2a81-40a0-9d03-80659a6678ef",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "should show \"There are no nodes available.\"",
                      "fullTitle": "clusters cluster actions scale workers should show \"There are no nodes available.\"",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.contains('There are no nodes available.');",
                      "err": {},
                      "uuid": "b67ebe80-a996-47ef-b267-632c4992f638",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "closes the modal on cancel",
                      "fullTitle": "clusters cluster actions scale workers closes the modal on cancel",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('[title=Cancel]').click();",
                      "err": {},
                      "uuid": "da6378ed-a50d-42f9-b917-e4e6c6fc7b84",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "only allows attaching for \"local\" cloudProviders",
                      "fullTitle": "clusters cluster actions scale workers only allows attaching for \"local\" cloudProviders",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.row('mockOpenStackCluster').rowAction().contains('Attach node').isDisabled();\ncy.closeModal();\ncy.row('mockAwsCluster').rowAction().contains('Attach node').isDisabled();\ncy.closeModal();\ncy.row('fakeCluster1').rowAction().contains('Attach node').isEnabled();\ncy.closeModal();",
                      "err": {},
                      "uuid": "bc42a33d-aac7-4fc6-a9de-2d2ab413e8d3",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    }
                  ],
                  "suites": [],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [
                    "8b018961-9f4a-41cb-bc26-1762914522f9",
                    "f7a2fe8d-c6b0-498e-a940-923889aeeb52",
                    "d04199cb-2a81-40a0-9d03-80659a6678ef",
                    "b67ebe80-a996-47ef-b267-632c4992f638",
                    "da6378ed-a50d-42f9-b917-e4e6c6fc7b84",
                    "bc42a33d-aac7-4fc6-a9de-2d2ab413e8d3"
                  ],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "c4d636e2-e970-4598-8df0-863b85845e22",
                  "title": "detach node",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "only allows detaching for \"local\" cloudProviders",
                      "fullTitle": "clusters cluster actions detach node only allows detaching for \"local\" cloudProviders",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.visit('/ui/kubernetes/infrastructure');\ncy.row('mockOpenStackCluster').rowAction().contains('Detach node').isDisabled();\ncy.closeModal();\ncy.row('mockAwsCluster').rowAction().contains('Detach node').isDisabled();\ncy.closeModal();\ncy.row('fakeCluster1').rowAction().contains('Detach node').isEnabled();\ncy.closeModal();",
                      "err": {},
                      "uuid": "88e8397f-ce61-4143-8eec-a191c5c29598",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "show the modal for detaching nodes from the cluster",
                      "fullTitle": "clusters cluster actions detach node show the modal for detaching nodes from the cluster",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.visit('/ui/kubernetes/infrastructure');\ncy.row('fakeCluster1').rowAction('Detach node');\ncy.contains('Detach node from cluster');",
                      "err": {},
                      "uuid": "bc273943-5747-4850-8492-5a6e2668e8ee",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "detaches a node",
                      "fullTitle": "clusters cluster actions detach node detaches a node",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('div[role=dialog]').contains('tr', 'fakeNode1').contains('Detach').click();",
                      "err": {},
                      "uuid": "1bd316e9-4b95-40f7-8497-8bf390146a96",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "closes the modal on detach",
                      "fullTitle": "clusters cluster actions detach node closes the modal on detach",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.contains('button', 'Detach nodes').click();\ncy.contains('Detach node from cluster').should('not.exist');",
                      "err": {},
                      "uuid": "5b095448-1c93-4040-a582-6d1924b9966b",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "should show \"No nodes available to detach\" (context updated)",
                      "fullTitle": "clusters cluster actions detach node should show \"No nodes available to detach\" (context updated)",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.row('fakeCluster1').rowAction('Detach node');\ncy.contains('No nodes available to detach');",
                      "err": {},
                      "uuid": "f8b81f77-3c22-40e0-a172-25f99a5801d9",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "still shows the node as detached after a page reload (backend data updated)",
                      "fullTitle": "clusters cluster actions detach node still shows the node as detached after a page reload (backend data updated)",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.visit('/ui/kubernetes/infrastructure');\ncy.row('fakeCluster1').rowAction('Detach node');\ncy.contains('No nodes available to detach');",
                      "err": {},
                      "uuid": "7dd2c1ea-3689-4eee-ae4f-9202ff8b04bf",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "closes the modal on cancel",
                      "fullTitle": "clusters cluster actions detach node closes the modal on cancel",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.contains('Cancel').click();\ncy.contains('Detach node from cluster').should('not.exist');",
                      "err": {},
                      "uuid": "480e6984-ce96-48f7-ae19-f15a84cda1ae",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    }
                  ],
                  "suites": [],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [
                    "88e8397f-ce61-4143-8eec-a191c5c29598",
                    "bc273943-5747-4850-8492-5a6e2668e8ee",
                    "1bd316e9-4b95-40f7-8497-8bf390146a96",
                    "5b095448-1c93-4040-a582-6d1924b9966b",
                    "f8b81f77-3c22-40e0-a172-25f99a5801d9",
                    "7dd2c1ea-3689-4eee-ae4f-9202ff8b04bf",
                    "480e6984-ce96-48f7-ae19-f15a84cda1ae"
                  ],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "6acd30f3-3686-42e5-926c-9b740b07bef4",
                  "title": "scale cluster",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "only allows scaling for \"AWS\" cloudProviders",
                      "fullTitle": "clusters cluster actions scale cluster only allows scaling for \"AWS\" cloudProviders",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.visit('/ui/kubernetes/infrastructure');\ncy.row('mockOpenStackCluster').rowAction().contains('Scale cluster').isDisabled();\ncy.closeModal();\ncy.row('mockAwsCluster').rowAction().contains('Scale cluster').isEnabled();\ncy.closeModal();\ncy.row('fakeCluster1').rowAction().contains('Scale cluster').isDisabled();\ncy.closeModal();",
                      "err": {},
                      "uuid": "2dc44dc7-e932-473e-ad86-f0d5e98303e6",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "show the modal for scaling the cluster",
                      "fullTitle": "clusters cluster actions scale cluster show the modal for scaling the cluster",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.row('mockAwsCluster').rowAction('Scale cluster');\ncy.contains('Scale Cluster'); // Note we capitalize 'Cluster' to differentiate and have text on the modal",
                      "err": {},
                      "uuid": "cd313cb3-62a0-417b-875c-d20a4fb7363e",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "scales a cluster",
                      "fullTitle": "clusters cluster actions scale cluster scales a cluster",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.get('#numWorkers input').clear().type('3'); // cy.get('#enableSpotWorkers input').click()",
                      "err": {},
                      "uuid": "accb380e-b91c-46ea-9cf2-44ee744f65b8",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "closes the modal on scale",
                      "fullTitle": "clusters cluster actions scale cluster closes the modal on scale",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.contains('button', 'Scale Cluster').click();\ncy.contains('Scale Cluster').should('not.exist');",
                      "err": {},
                      "uuid": "a0bef895-29a0-4bf3-8163-ec4ea3390e9c",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "should show the cluster with the new number of worker nodes",
                      "fullTitle": "clusters cluster actions scale cluster should show the cluster with the new number of worker nodes",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.visit('/ui/kubernetes/infrastructure');\ncy.row('mockAwsCluster').rowAction('Scale cluster');\ncy.get('#numWorkers input').should('have.value', '3');",
                      "err": {},
                      "uuid": "a104cc21-621d-480b-8771-989d3d8229d9",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    },
                    {
                      "title": "should close the modal when cancelled",
                      "fullTitle": "clusters cluster actions scale cluster should close the modal when cancelled",
                      "timedOut": null,
                      "duration": 0,
                      "state": "skipped",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.contains('button', 'Cancel').click();\ncy.contains('Scale Cluster').should('not.exist');",
                      "err": {},
                      "uuid": "a5b6aa56-bf09-4928-a2e9-cc9016f7a8b7",
                      "parentUUID": null,
                      "isHook": false,
                      "skipped": true
                    }
                  ],
                  "suites": [],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [
                    "2dc44dc7-e932-473e-ad86-f0d5e98303e6",
                    "cd313cb3-62a0-417b-875c-d20a4fb7363e",
                    "accb380e-b91c-46ea-9cf2-44ee744f65b8",
                    "a0bef895-29a0-4bf3-8163-ec4ea3390e9c",
                    "a104cc21-621d-480b-8771-989d3d8229d9",
                    "a5b6aa56-bf09-4928-a2e9-cc9016f7a8b7"
                  ],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mocha",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}